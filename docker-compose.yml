name: case-tecnico-arkmeds

services:
  postgres:
    container_name: postgres
    image: postgres:18.0-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    container_name: redis
    image: redis:8.2.2-alpine
    command: >
      --requirepass ""
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4.1.4-alpine
    ports:
      - "5672:5672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  app:
    container_name: arkmeds-api
    image: mkvlrn/case-tecnico-arkmeds:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    ports:
      - 4000:4000
    environment:
      PORT: 4000
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/arkmeds
      REDIS_URL: redis://redis:6379
      BROKER_URL: amqp://rabbitmq:5672
      FARE_TTL: 300
      RECEIPT_DIR: /app/tmp
      NODE_ENV: production
    volumes:
      - ./tmp:/app/tmp
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  rabbitmq-data:
